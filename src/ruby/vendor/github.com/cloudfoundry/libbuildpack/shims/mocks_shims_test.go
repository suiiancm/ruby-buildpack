// Code generated by MockGen. DO NOT EDIT.
// Source: shims.go

// Package shims_test is a generated GoMock package.
package shims_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockShimmer is a mock of Shimmer interface
type MockShimmer struct {
	ctrl     *gomock.Controller
	recorder *MockShimmerMockRecorder
}

// MockShimmerMockRecorder is the mock recorder for MockShimmer
type MockShimmerMockRecorder struct {
	mock *MockShimmer
}

// NewMockShimmer creates a new mock instance
func NewMockShimmer(ctrl *gomock.Controller) *MockShimmer {
	mock := &MockShimmer{ctrl: ctrl}
	mock.recorder = &MockShimmerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShimmer) EXPECT() *MockShimmerMockRecorder {
	return m.recorder
}

// RootDir mocks base method
func (m *MockShimmer) RootDir() string {
	ret := m.ctrl.Call(m, "RootDir")
	ret0, _ := ret[0].(string)
	return ret0
}

// RootDir indicates an expected call of RootDir
func (mr *MockShimmerMockRecorder) RootDir() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RootDir", reflect.TypeOf((*MockShimmer)(nil).RootDir))
}

// Detect mocks base method
func (m *MockShimmer) Detect(buildpacks, group, launch, order, plan string) error {
	ret := m.ctrl.Call(m, "Detect", buildpacks, group, launch, order, plan)
	ret0, _ := ret[0].(error)
	return ret0
}

// Detect indicates an expected call of Detect
func (mr *MockShimmerMockRecorder) Detect(buildpacks, group, launch, order, plan interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Detect", reflect.TypeOf((*MockShimmer)(nil).Detect), buildpacks, group, launch, order, plan)
}

// Supply mocks base method
func (m *MockShimmer) Supply(buildpacks, cache, group, launch, plan, platform string) error {
	ret := m.ctrl.Call(m, "Supply", buildpacks, cache, group, launch, plan, platform)
	ret0, _ := ret[0].(error)
	return ret0
}

// Supply indicates an expected call of Supply
func (mr *MockShimmerMockRecorder) Supply(buildpacks, cache, group, launch, plan, platform interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Supply", reflect.TypeOf((*MockShimmer)(nil).Supply), buildpacks, cache, group, launch, plan, platform)
}
